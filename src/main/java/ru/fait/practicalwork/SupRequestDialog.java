package ru.fait.practicalwork;

import java.util.Arrays;
import java.util.Vector;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Богатырев Иван
 */
public class SupRequestDialog extends javax.swing.JDialog {

    static Vector data1;
    static Vector data2;
    final static String[] strColNames = {"Код поставщика", "Наименование", "Адрес", "Телефон",
        "Код типа", "Производитель", "Наименование 1", "Условия хранения", "Упаковка", "Срок годности",
        "Код типа", "Производитель", "Наименование 2", "Условия хранения", "Упаковка", "Срок годности",
        "Код типа", "Производитель", "Наименование 3", "Условия хранения", "Упаковка", "Срок годности"};
    Vector<String> ColNames = new Vector<String>(Arrays.asList(strColNames));

    /**
     * Creates new form requestDialog
     */
    public SupRequestDialog(java.awt.Frame parent, boolean modal, Vector v1, Vector v2) {
        super(parent, modal);
        initComponents();
        data1 = v1;
        data2 = v2;
        Vector newTable = new Vector();
        for (int i = 0; i < data1.size(); i++) {
            Vector temp1 = (Vector) data1.get(i);
            Vector newLine = new Vector();
            for (int k = 0; k < 4; k++) {
                newLine.add(temp1.get(k));
            }
            for (int j = 0; j < data2.size(); j++) {
                Vector temp2 = (Vector) data2.get(j);
                if (temp1.get(4).equals(temp2.get(0)) || temp1.get(5).equals(temp2.get(0)) || temp1.get(6).equals(temp2.get(0))) {
                    for (int k = 1; k < temp2.size(); k++) {
                        newLine.add(temp2.get(k));
                    }
                }
            }
            newTable.add(newLine);

        }
        DefaultTableModel tm = new DefaultTableModel(newTable, ColNames);
        requestTable.setModel(tm);
        System.out.println(newTable.toString());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(requestTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SupRequestDialog dialog = new SupRequestDialog(new javax.swing.JFrame(), true, data1, data2);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
